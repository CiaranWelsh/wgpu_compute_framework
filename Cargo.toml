[package]
name = "wgpu_compute_framework"
version = "0.1.0"
edition = "2021"

# The framework targets the stable Rust toolchain.  It is structured as a
# reusable library crate with examples and benchmarks.  Depend on the
# official `wgpu` crate for access to the GPU and on `bytemuck` for
# zeroâ€‘cost casting between typed slices and byte slices.  `pollster` is
# used to synchronously wait on asynchronous GPU futures.  Criterion is
# used for the optional performance benchmarks.

[dependencies]
wgpu = { version = "26.0.1" }
bytemuck = { version = "1.14", features = ["derive"] }
pollster = "0.3"
env_logger = "0.11.8"

[dev-dependencies]
criterion = { version = "0.5", default-features = false }
rand = "0.8"

[lib]
name = "wgpu_compute_framework"
path = "src/lib.rs"

# Criterion benchmarks live under the `benches` directory.  The `harness = false`
# directive allows Criterion to provide its own main function.  Without
# disabling the harness, Cargo would generate a second `main` which
# conflicts at link time.

[[bench]]
name = "compute_bench"
path = "benches/compute_bench.rs"
harness = false